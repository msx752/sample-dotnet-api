version: '3.4'

services:
  dps:
    image: defreitas/dns-proxy-server
    container_name: mycontainerdnsresolver
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/resolv.conf:/etc/resolv.conf
    restart: "on-failure"
    environment:
      - MG_LOG_LEVEL=ERROR
    hostname: dns.mageddo
    networks:
      dps:
        ipv4_address: 172.0.0.10

  myrabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: myrabbitmq
    networks:
      - dps
    dns:
      - 172.0.0.10
    restart: "on-failure"
    environment:
        - HOSTNAMES=myrabbitmq.container
    ports:
        - "5672:5672"
        - "15672:15672"
    depends_on:
      - "dps"

  mymongodb:
    image: mongo:latest
    container_name: mymongodb
    networks:
      - dps
    dns:
      - 172.0.0.10
    restart: "on-failure"
    environment:
        - MONGO_INITDB_DATABASE=MongoDb
        - HOSTNAMES=mymongodb.container
    ports:
        - "27017-27019:27017-27019"
    depends_on:
      - "dps"

  identityservice:
    image: mustafasalih/sample-dotnet-microservices:identityservice
    container_name: identityservice
    networks:
      - dps
    dns:
      - 172.0.0.10
    restart: "on-failure"
    build:
     context: .
     dockerfile: src/IdentityService/Samp.Identity.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:1020
      - USEDOCKEROCELOT=true
      - HOSTNAMES=identityservice.container
    ports: 
      - "1020:1020"
    depends_on:
      - "myrabbitmq"
      - "mymongodb"

  movieservice:
    image: mustafasalih/sample-dotnet-microservices:movieservice
    container_name: movieservice
    networks:
      - dps
    dns:
      - 172.0.0.10
    restart: "on-failure"
    build:
     context: .
     dockerfile: src/MovieService/Samp.Movie.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:1030
      - USEDOCKEROCELOT=true
      - HOSTNAMES=movieservice.container
    ports: 
      - "1030:1030"
    depends_on:
      - "myrabbitmq"
      - "mymongodb"

  cartservice:
    image: mustafasalih/sample-dotnet-microservices:cartservice
    container_name: cartservice
    networks:
      - dps
    dns:
      - 172.0.0.10
    restart: "on-failure"
    build:
     context: .
     dockerfile: src/CartService/Samp.Cart.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:1050
      - USEDOCKEROCELOT=true
      - HOSTNAMES=cartservice.container
    ports: 
      - "1050:1050"
    depends_on:
      - "myrabbitmq"
      - "mymongodb"
      - "identityservice"

  paymentservice:
    image: mustafasalih/sample-dotnet-microservices:paymentservice
    container_name: paymentservice
    networks:
      - dps
    dns:
      - 172.0.0.10
    restart: "on-failure"
    build:
     context: .
     dockerfile: src/PaymentService/Samp.Payment.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:1040
      - USEDOCKEROCELOT=true
      - HOSTNAMES=paymentservice.container
    ports: 
      - "1040:1040"
    depends_on:
      - "myrabbitmq"
      - "mymongodb"
      - "identityservice"
      - "cartservice"
          
  getewayservice:
    image: mustafasalih/sample-dotnet-microservices:getewayservice
    container_name: getewayservice
    networks:
      - dps
    dns:
      - 172.0.0.10
    restart: "on-failure"
    build:
     context: .
     dockerfile: src/GatewayService/Samp.Gateway.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:1010
      - USEDOCKEROCELOT=true
      - HOSTNAMES=getewayservice.container
    ports: 
      - "1010:1010"
    depends_on:
      - "myrabbitmq"
      - "mymongodb"
      - "identityservice"
      - "movieservice"
      - "cartservice"

  websiteapp:
    image: mustafasalih/sample-dotnet-microservices:websiteapp
    container_name: websiteapp
    networks:
      - dps
    dns:
      - 172.0.0.10
    restart: "on-failure"
    build:
     context: .
     dockerfile: src/Samp.Web.MovieStore/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:2000
      - USEDOCKEROCELOT=true
      - HOSTNAMES=websiteapp.container
    ports: 
      - "2000:2000"
    depends_on:
      - "myrabbitmq"
      - "mymongodb"
      - "getewayservice"

networks:
  dps:
    ipam:
      config:
        - subnet: 172.0.0.0/24